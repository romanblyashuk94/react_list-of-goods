{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","handleSort","setState","handleReversed","handleParamsReset","this","visibleGoods","goods","ALPHABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,WAAa,SAACF,GACZ,EAAKG,SAAS,CAAEH,cAPpB,EAUEI,eAAiB,WACf,EAAKD,UAAS,SAAAL,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBAXjD,EAcEM,kBAAoB,WAClB,EAAKF,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAjBzB,4CAqBE,WAAU,IAAD,OACP,EAAiCK,KAAKR,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdO,EApDH,SACLC,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENQ,EAAY,YAAOC,GAEzB,OAAQR,GACN,KAAKL,EAASc,SACZF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC5C,MACF,KAAKjB,EAASmB,OACZP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAS7C,OAJIhB,GACFQ,EAAaS,UAGRT,EAgCgBU,CACnBrB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKmB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYpB,IAAaL,EAASc,WAEtCY,QAAS,kBAAM,EAAKnB,WAAWP,EAASc,WAP1C,iCAYA,wBACEU,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYpB,IAAaL,EAASmB,SAEtC,eAAcnB,EAASmB,OACvBO,QAAS,kBAAM,EAAKnB,WAAWP,EAASmB,SAR1C,4BAaA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAarB,IAEjBsB,QAASf,KAAKF,eAPhB,qBAYEJ,IAAaL,EAASM,MAAQF,EAE5B,wBACEoB,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,kBAHhB,mBAQA,QAGN,6BACGE,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eApFrB,GAAyBC,iBCvDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.258050e0.chunk.js","sourcesContent":["import { PureComponent } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n    case SortType.LENGTH:\n      visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n    default:\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends PureComponent<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSort = (sortType: SortType) => {\n    this.setState({ sortType });\n  };\n\n  handleReversed = () => {\n    this.setState(state => ({ isReversed: !state.isReversed }));\n  };\n\n  handleParamsReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={() => this.handleSort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            data-sort-by={SortType.LENGTH}\n            onClick={() => this.handleSort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.handleReversed}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleParamsReset}\n              >\n                Reset\n              </button>\n            )\n            : null}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}